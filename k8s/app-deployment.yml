apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
  namespace: todo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: todo-app
        image: roshan03ish/fullstack-todo-list-app:v2 # Updated image with fixed environment.js
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        env:
        # config from ConfigMap
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: todoapp-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: todoapp-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: todoapp-config
              key: DB_NAME
        - name: DEPLOYMENT
          valueFrom:
            configMapKeyRef:
              name: todoapp-config
              key: DEPLOYMENT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: todoapp-config
              key: ENVIRONMENT
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: todoapp-config
              key: PORT

        # secrets for credentials
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: todoapp-secret
              key: DB_PASSWORD

        # final connection string
        - name: DB_DOCKER
          value: "mongodb://$(DB_USERNAME):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?authSource=admin"

        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10

        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: todoapp-service
  namespace: todo
spec:
  selector:
    app: todo-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: LoadBalancer # Change to NodePort if LoadBalancer is not available
